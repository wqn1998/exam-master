<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lititi.exams.web.dao.PublishContentMapper" >
  <resultMap id="BaseResultMap" type="com.lititi.exams.web.entity.PublishContent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="delete_flag" property="deleteFlag" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="classify" property="classify" jdbcType="VARCHAR" />
    <result column="publish_date" property="publishDate" jdbcType="TIMESTAMP" />
    <result column="publish_delay_date" property="publishDelayDate" jdbcType="TIMESTAMP" />
    <result column="effective_date" property="effectiveDate" jdbcType="TIMESTAMP" />
    <result column="share_flag" property="shareFlag" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="content_code" property="contentCode" jdbcType="VARCHAR" />
    <result column="publish_flag" property="publishFlag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, create_by, create_date, update_by, update_date, delete_flag, title, classify, 
    publish_date, publish_delay_date, effective_date, share_flag, content, image_url, 
    content_code, publish_flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lititi.exams.web.entity.PublishContentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from publish_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from publish_content
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from publish_content
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.lititi.exams.web.entity.PublishContentExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from publish_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lititi.exams.web.entity.PublishContent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into publish_content (id, create_by, create_date, 
      update_by, update_date, delete_flag, 
      title, classify, publish_date, 
      publish_delay_date, effective_date, share_flag, 
      content, image_url, content_code, 
      publish_flag)
    values (#{id,jdbcType=BIGINT}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{deleteFlag,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{classify,jdbcType=VARCHAR}, #{publishDate,jdbcType=TIMESTAMP}, 
      #{publishDelayDate,jdbcType=TIMESTAMP}, #{effectiveDate,jdbcType=TIMESTAMP}, #{shareFlag,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{imageUrl,jdbcType=VARCHAR}, #{contentCode,jdbcType=VARCHAR}, 
      #{publishFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lititi.exams.web.entity.PublishContent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into publish_content
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="publishDate != null" >
        publish_date,
      </if>
      <if test="publishDelayDate != null" >
        publish_delay_date,
      </if>
      <if test="effectiveDate != null" >
        effective_date,
      </if>
      <if test="shareFlag != null" >
        share_flag,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="imageUrl != null" >
        image_url,
      </if>
      <if test="contentCode != null" >
        content_code,
      </if>
      <if test="publishFlag != null" >
        publish_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="publishDelayDate != null" >
        #{publishDelayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveDate != null" >
        #{effectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shareFlag != null" >
        #{shareFlag,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null" >
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="contentCode != null" >
        #{contentCode,jdbcType=VARCHAR},
      </if>
      <if test="publishFlag != null" >
        #{publishFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lititi.exams.web.entity.PublishContentExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from publish_content
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getContentList" resultType="com.lititi.exams.web.entity.PublishContent">
    SELECT
    id AS id,
    content_code AS contentCode,
    title AS title,
    image_url AS imageUrl,
    classify AS classify,
    publish_date AS publishDate,
    effective_date AS effectiveDate,
    share_flag AS shareFlag,
    publish_flag AS publishFlag
    FROM publish_content
    <where>
        AND delete_flag = 0
      <if test="title != null and title != ''">
        AND title LIKE CONCAT('%', #{title}, '%')
      </if>
      <if test="contentCode != null and contentCode != ''">
        AND content_code = #{contentCode}
      </if>
      <if test="startDate != null and contentCode != ''">
        AND publish_date &gt;= #{startDate}
      </if>
      <if test="endDate != null and contentCode != ''">
        AND publish_date &lt;= #{endDate}
      </if>
      <if test="publishFlag != null and contentCode != ''">
        AND publish_flag = #{publishFlag}
      </if>
    </where>
    ORDER BY content_code DESC
  </select>
  <select id="getContentByDate" resultType="com.lititi.exams.web.entity.PublishContent">
    SELECT
      id AS id,
      content_code AS contentCode,
      title AS title,
      image_url AS imageUrl,
      classify AS classify,
      publish_date AS publishDate,
      effective_date AS effectiveDate,
      share_flag AS shareFlag,
      publish_flag AS publishFlag
    FROM
      publish_content
    WHERE
      delete_flag = 0
      and content_code = #{contentCode}
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update publish_content
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteFlag != null" >
        delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.classify != null" >
        classify = #{record.classify,jdbcType=VARCHAR},
      </if>
      <if test="record.publishDate != null" >
        publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.publishDelayDate != null" >
        publish_delay_date = #{record.publishDelayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.effectiveDate != null" >
        effective_date = #{record.effectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.shareFlag != null" >
        share_flag = #{record.shareFlag,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.imageUrl != null" >
        image_url = #{record.imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.contentCode != null" >
        content_code = #{record.contentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.publishFlag != null" >
        publish_flag = #{record.publishFlag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update publish_content
    set id = #{record.id,jdbcType=BIGINT},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      delete_flag = #{record.deleteFlag,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      classify = #{record.classify,jdbcType=VARCHAR},
      publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
      publish_delay_date = #{record.publishDelayDate,jdbcType=TIMESTAMP},
      effective_date = #{record.effectiveDate,jdbcType=TIMESTAMP},
      share_flag = #{record.shareFlag,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      image_url = #{record.imageUrl,jdbcType=VARCHAR},
      content_code = #{record.contentCode,jdbcType=VARCHAR},
      publish_flag = #{record.publishFlag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lititi.exams.web.entity.PublishContent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update publish_content
    <set >
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        classify = #{classify,jdbcType=VARCHAR},
      </if>
      <if test="publishDate != null" >
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="publishDelayDate != null" >
        publish_delay_date = #{publishDelayDate,jdbcType=TIMESTAMP},
      </if>
      <if test="effectiveDate != null" >
        effective_date = #{effectiveDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shareFlag != null" >
        share_flag = #{shareFlag,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="contentCode != null" >
        content_code = #{contentCode,jdbcType=VARCHAR},
      </if>
      <if test="publishFlag != null" >
        publish_flag = #{publishFlag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lititi.exams.web.entity.PublishContent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update publish_content
    set create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      delete_flag = #{deleteFlag,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=VARCHAR},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      publish_delay_date = #{publishDelayDate,jdbcType=TIMESTAMP},
      effective_date = #{effectiveDate,jdbcType=TIMESTAMP},
      share_flag = #{shareFlag,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      content_code = #{contentCode,jdbcType=VARCHAR},
      publish_flag = #{publishFlag,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updatePublishFlag">
    update publish_content
    set publish_flag = 0
    where content_code = #{contentCode}
  </update>
</mapper>